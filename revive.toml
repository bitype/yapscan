ignoreGeneratedHeader = false
severity = "error"
confidence = 0.8
errorCode = 1
warningCode = 0

[rule.atomic]
[rule.blank-imports]
[rule.cognitive-complexity]
    arguments = [17]
    severity = "warning"
[rule.confusing-results]
[rule.constant-logical-expr]
[rule.context-as-argument]
[rule.context-keys-type]
# [rule.cyclomatic]
#     arguments = [5]
[rule.defer]
[rule.dot-imports]
[rule.early-return]
[rule.empty-block]
[rule.empty-lines]
[rule.errorf]
[rule.error-naming]
[rule.error-return]
[rule.error-strings]
# [rule.exported]
# This is on the todo-list
[rule.get-return]
[rule.if-return]
[rule.import-shadowing]
[rule.imports-blacklist]
    arguments = ["errors"] # Using fmt.Errorf instead to stay consistent
[rule.increment-decrement]
[rule.indent-error-flow]
[rule.optimize-operands-order]
# [rule.package-comments]
# This rule false-positives on every generator comment
[rule.range]
[rule.range-val-address]
[rule.range-val-in-closure]
[rule.receiver-naming]
[rule.redefines-builtin-id]
[rule.string-of-int]
[rule.struct-tag]
[rule.superfluous-else]
[rule.time-equal]
[rule.time-naming]
[rule.unconditional-recursion]
[rule.unexported-naming]
[rule.unexported-return]
# [rule.unhandled-error]
[rule.unnecessary-stmt]
[rule.unreachable-code]
# [rule.unused-parameter]
# [rule.unused-receiver]
[rule.useless-break]
[rule.var-declaration]
[rule.var-naming]
