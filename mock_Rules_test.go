// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package yapscan

import (
	time "time"

	mock "github.com/stretchr/testify/mock"

	yara "github.com/hillu/go-yara/v4"
)

// MockRules is an autogenerated mock type for the Rules type
type MockRules struct {
	mock.Mock
}

// ScanFile provides a mock function with given fields: filename, flags, timeout, cb
func (_m *MockRules) ScanFile(filename string, flags yara.ScanFlags, timeout time.Duration, cb yara.ScanCallback) error {
	ret := _m.Called(filename, flags, timeout, cb)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, yara.ScanFlags, time.Duration, yara.ScanCallback) error); ok {
		r0 = rf(filename, flags, timeout, cb)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ScanMem provides a mock function with given fields: buf, flags, timeout, cb
func (_m *MockRules) ScanMem(buf []byte, flags yara.ScanFlags, timeout time.Duration, cb yara.ScanCallback) error {
	ret := _m.Called(buf, flags, timeout, cb)

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte, yara.ScanFlags, time.Duration, yara.ScanCallback) error); ok {
		r0 = rf(buf, flags, timeout, cb)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
